{"ast":null,"code":"var _jsxFileName = \"/Users/ameera/Downloads/3691/hci4good-solucore/src/actions/views/Map/Map.js\";\nimport React from \"react\";\nimport GoogleMapReact from \"google-maps-react\";\nimport MyMarker from \"./MyMarker\";\n\n// implementation of this function is needed for codesandbox example to work\n// you can remove it otherwise\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst distanceToMouse = (pt, mp) => {\n  if (pt && mp) {\n    // return distance between the marker and mouse pointer\n    return Math.sqrt((pt.x - mp.x) * (pt.x - mp.x) + (pt.y - mp.y) * (pt.y - mp.y));\n  }\n};\nconst points = [{\n  id: 1,\n  title: \"Round Pond\",\n  lat: 51.506,\n  lng: -0.184\n}, {\n  id: 2,\n  title: \"The Long Water\",\n  lat: 51.508,\n  lng: -0.175\n}, {\n  id: 3,\n  title: \"The Serpentine\",\n  lat: 51.505,\n  lng: -0.164\n}];\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\";\", /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        // remove the key if you want to fork\n        key: \"AIzaSyDiKc4HxX5G7EfneIZBN_Hlk2_luoT_yvo\",\n        language: \"en\",\n        region: \"US\"\n      },\n      defaultCenter: {\n        lat: 51.506,\n        lng: -0.169\n      },\n      defaultZoom: 15,\n      distanceToMouse: distanceToMouse,\n      children: points.map(({\n        lat,\n        lng,\n        id,\n        title\n      }) => {\n        return /*#__PURE__*/_jsxDEV(MyMarker, {\n          lat: lat,\n          lng: lng,\n          text: id,\n          tooltip: title\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","GoogleMapReact","MyMarker","jsxDEV","_jsxDEV","distanceToMouse","pt","mp","Math","sqrt","x","y","points","id","title","lat","lng","App","className","children","bootstrapURLKeys","key","language","region","defaultCenter","defaultZoom","map","text","tooltip","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ameera/Downloads/3691/hci4good-solucore/src/actions/views/Map/Map.js"],"sourcesContent":["import React from \"react\";\n\nimport GoogleMapReact from \"google-maps-react\";\nimport MyMarker from \"./MyMarker\";\n\n// implementation of this function is needed for codesandbox example to work\n// you can remove it otherwise\nconst distanceToMouse = (pt, mp) => {\n    if (pt && mp) {\n      // return distance between the marker and mouse pointer\n      return Math.sqrt(\n        (pt.x - mp.x) * (pt.x - mp.x) + (pt.y - mp.y) * (pt.y - mp.y)\n      );\n    }\n  };\n  \n  const points = [\n    { id: 1, title: \"Round Pond\", lat: 51.506, lng: -0.184 },\n    { id: 2, title: \"The Long Water\", lat: 51.508, lng: -0.175 },\n    { id: 3, title: \"The Serpentine\", lat: 51.505, lng: -0.164 }\n  ];\n  \n  export default function App() {\n    return (\n      <div className=\"App\">\n        ;\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            // remove the key if you want to fork\n            key: \"AIzaSyDiKc4HxX5G7EfneIZBN_Hlk2_luoT_yvo\",\n            language: \"en\",\n            region: \"US\"\n          }}\n          defaultCenter={{ lat: 51.506, lng: -0.169 }}\n          defaultZoom={15}\n          distanceToMouse={distanceToMouse}\n        >\n          {points.map(({ lat, lng, id, title }) => {\n            return (\n              <MyMarker key={id} lat={lat} lng={lng} text={id} tooltip={title} />\n            );\n          })}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAACC,EAAE,EAAEC,EAAE,KAAK;EAChC,IAAID,EAAE,IAAIC,EAAE,EAAE;IACZ;IACA,OAAOC,IAAI,CAACC,IAAI,CACd,CAACH,EAAE,CAACI,CAAC,GAAGH,EAAE,CAACG,CAAC,KAAKJ,EAAE,CAACI,CAAC,GAAGH,EAAE,CAACG,CAAC,CAAC,GAAG,CAACJ,EAAE,CAACK,CAAC,GAAGJ,EAAE,CAACI,CAAC,KAAKL,EAAE,CAACK,CAAC,GAAGJ,EAAE,CAACI,CAAC,CAC9D,CAAC;EACH;AACF,CAAC;AAED,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,YAAY;EAAEC,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC;AAAM,CAAC,EACxD;EAAEH,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,gBAAgB;EAAEC,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC;AAAM,CAAC,EAC5D;EAAEH,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,gBAAgB;EAAEC,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC;AAAM,CAAC,CAC7D;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,GAAC,GAEnB,eAAAf,OAAA,CAACH,cAAc;MACbmB,gBAAgB,EAAE;QAChB;QACAC,GAAG,EAAE,yCAAyC;QAC9CC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE;MACV,CAAE;MACFC,aAAa,EAAE;QAAET,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE,CAAC;MAAM,CAAE;MAC5CS,WAAW,EAAE,EAAG;MAChBpB,eAAe,EAAEA,eAAgB;MAAAc,QAAA,EAEhCP,MAAM,CAACc,GAAG,CAAC,CAAC;QAAEX,GAAG;QAAEC,GAAG;QAAEH,EAAE;QAAEC;MAAM,CAAC,KAAK;QACvC,oBACEV,OAAA,CAACF,QAAQ;UAAUa,GAAG,EAAEA,GAAI;UAACC,GAAG,EAAEA,GAAI;UAACW,IAAI,EAAEd,EAAG;UAACe,OAAO,EAAEd;QAAM,GAAjDD,EAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiD,CAAC;MAEvE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACC,EAAA,GAvBuBhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}