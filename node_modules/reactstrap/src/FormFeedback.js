import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { mapToCssModules, tagPropType } from './utils';

const propTypes = {
  children: PropTypes.node,
  tag: tagPropType,
  className: PropTypes.string,
  cssModule: PropTypes.object,
  valid: PropTypes.bool,
<<<<<<< HEAD
  tooltip: PropTypes.bool,
};

function FormFeedback(props) {
  const {
    className,
    cssModule,
    valid = undefined,
    tooltip,
    tag: Tag = 'div',
=======
  tooltip: PropTypes.bool
};

const defaultProps = {
  tag: 'div',
  valid: undefined
};

const FormFeedback = (props) => {
  const {
    className,
    cssModule,
    valid,
    tooltip,
    tag: Tag,
>>>>>>> babce7e82dc134320378dfce834b316b88320254
    ...attributes
  } = props;

  const validMode = tooltip ? 'tooltip' : 'feedback';

  const classes = mapToCssModules(
    classNames(
      className,
<<<<<<< HEAD
      valid ? `valid-${validMode}` : `invalid-${validMode}`,
    ),
    cssModule,
  );

  return <Tag {...attributes} className={classes} />;
}

FormFeedback.propTypes = propTypes;
=======
      valid ? `valid-${validMode}` : `invalid-${validMode}`
    ),
    cssModule
  );

  return <Tag {...attributes} className={classes} />;
};

FormFeedback.propTypes = propTypes;
FormFeedback.defaultProps = defaultProps;
>>>>>>> babce7e82dc134320378dfce834b316b88320254

export default FormFeedback;
