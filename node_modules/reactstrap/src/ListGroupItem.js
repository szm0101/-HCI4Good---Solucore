import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { mapToCssModules, tagPropType } from './utils';

const propTypes = {
<<<<<<< HEAD
  /** Add action prop to give effects while hovering over element */
  action: PropTypes.bool,
  /** Add active prop to make the current selection active */
  active: PropTypes.bool,
  /** Add custom class */
  className: PropTypes.string,
  /** Change underlying component's CSS base class name */
  cssModule: PropTypes.object,
  /** Add background colour to the list item */
  color: PropTypes.string,
  /** Make the list item appear disabled */
  disabled: PropTypes.bool,
  /** Set a custom element for this component */
  tag: tagPropType,
=======
  tag: tagPropType,
  active: PropTypes.bool,
  disabled: PropTypes.bool,
  color: PropTypes.string,
  action: PropTypes.bool,
  className: PropTypes.any,
  cssModule: PropTypes.object,
};

const defaultProps = {
  tag: 'li'
>>>>>>> babce7e82dc134320378dfce834b316b88320254
};

const handleDisabledOnClick = (e) => {
  e.preventDefault();
};

<<<<<<< HEAD
function ListGroupItem(props) {
  const {
    className,
    cssModule,
    tag: Tag = 'li',
=======
const ListGroupItem = (props) => {
  const {
    className,
    cssModule,
    tag: Tag,
>>>>>>> babce7e82dc134320378dfce834b316b88320254
    active,
    disabled,
    action,
    color,
    ...attributes
  } = props;
<<<<<<< HEAD
  const classes = mapToCssModules(
    classNames(
      className,
      active ? 'active' : false,
      disabled ? 'disabled' : false,
      action ? 'list-group-item-action' : false,
      color ? `list-group-item-${color}` : false,
      'list-group-item',
    ),
    cssModule,
  );
=======
  const classes = mapToCssModules(classNames(
    className,
    active ? 'active' : false,
    disabled ? 'disabled' : false,
    action ? 'list-group-item-action' : false,
    color ? `list-group-item-${color}` : false,
    'list-group-item'
  ), cssModule);
>>>>>>> babce7e82dc134320378dfce834b316b88320254

  // Prevent click event when disabled.
  if (disabled) {
    attributes.onClick = handleDisabledOnClick;
  }
<<<<<<< HEAD
  return <Tag {...attributes} className={classes} />;
}

ListGroupItem.propTypes = propTypes;
=======
  return (
    <Tag {...attributes} className={classes} />
  );
};

ListGroupItem.propTypes = propTypes;
ListGroupItem.defaultProps = defaultProps;
>>>>>>> babce7e82dc134320378dfce834b316b88320254

export default ListGroupItem;
