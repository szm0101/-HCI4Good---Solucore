import React from 'react';
<<<<<<< HEAD
import { render, screen } from '@testing-library/react';
import { Card } from '..';
import {
  testForCustomClass,
  testForCustomTag,
  testForDefaultClass,
} from '../testUtils';

describe('Card', () => {
  it('should render with "card" class', () => {
    testForDefaultClass(Card, 'card');
  });

  it('should render with "bg-primary" class', () => {
    render(
      <Card inverse body color="primary">
        Yo!
      </Card>,
    );

    expect(screen.getByText('Yo!')).toHaveClass(
      'card card-body bg-primary text-white',
    );
  });

  it('should render with "outline" class when a color is provided', () => {
    render(
      <Card outline body color="primary">
        Yo!
      </Card>,
    );

    expect(screen.getByText('Yo!')).toHaveClass(
      'card card-body border-primary',
    );
  });

  it('should not render with "outline" class when a color is not provided (no default)', () => {
    render(
      <Card outline body>
        Yo!
      </Card>,
    );

    expect(screen.getByText('Yo!').className).not.toMatch(/border/i);
  });

  it('should render additional classes', () => {
    testForCustomClass(Card);
  });

  it('should render custom tag', () => {
    testForCustomTag(Card);
=======
import { shallow } from 'enzyme';
import { Card } from '../';

describe('Card', () => {
  it('should render with "card" class', () => {
    const wrapper = shallow(<Card>Yo!</Card>);

    expect(wrapper.text()).toBe('Yo!');
    expect(wrapper.hasClass('card')).toBe(true);
  });

  it('should render with "modal-header" class', () => {
    const wrapper = shallow(<Card inverse body color="primary">Yo!</Card>);

    expect(wrapper.text()).toBe('Yo!');
    expect(wrapper.hasClass('card')).toBe(true);
    expect(wrapper.hasClass('card-body')).toBe(true);
    expect(wrapper.hasClass('bg-primary')).toBe(true);
    expect(wrapper.hasClass('text-white')).toBe(true);
  });

  it('should render with "outline" class when a color is provided', () => {
    const wrapper = shallow(<Card outline body color="primary">Yo!</Card>);

    expect(wrapper.text()).toBe('Yo!');
    expect(wrapper.hasClass('card')).toBe(true);
    expect(wrapper.hasClass('card-body')).toBe(true);
    expect(wrapper.hasClass('border-primary')).toBe(true);
  });

  it('should not render with "outline" class when a color is not provided (no default)', () => {
    const wrapper = shallow(<Card outline body>Yo!</Card>);

    expect(wrapper.text()).toBe('Yo!');
    expect(wrapper.hasClass('card')).toBe(true);
    expect(wrapper.hasClass('card-body')).toBe(true);
    expect(wrapper.html()).not.toContain('border');
  });

  it('should render additional classes', () => {
    const wrapper = shallow(<Card className="other">Yo!</Card>);

    expect(wrapper.text()).toBe('Yo!');
    expect(wrapper.hasClass('other')).toBe(true);
    expect(wrapper.hasClass('card')).toBe(true);
  });

  it('should render custom tag', () => {
    const wrapper = shallow(<Card tag="main">Yo!</Card>);

    expect(wrapper.text()).toBe('Yo!');
    expect(wrapper.hasClass('card')).toBe(true);
    expect(wrapper.find('main').length).toBe(1);
>>>>>>> babce7e82dc134320378dfce834b316b88320254
  });
});
